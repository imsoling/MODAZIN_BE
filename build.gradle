plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    // .adoc 파일 생성을 위한 플러그인
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.side-project'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // asciidoctorExtensions : Asciidoctor의 확장 기능을 사용하기 위한 설정
    asciidoctorExtensions
}

repositories {
    mavenCentral()
}

ext {
    // snippetsDir : 테스트 실행시 생성되는 응답을 저장할 디렉토리 지정
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security' // 보안 
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // rest docs 의존성 추가
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    // asciidoctor 의존성 추가 configration에서 지정한 의존 설정을 사용
    asciidoctorExtensions 'org.springframework.restdocs:spring-restdocs-asciidoctor'
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

// test 할 때 snippetsDir에 생성된 응답을 asciidoctor로 변환하여 .adoc 파일 생성
tasks.named('test') {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

// asciidoctor를 사용하기 위해서 asciidoctor task에 asciidoctorExtensions 설정
tasks.named('asciidoctor') {
    configurations "asciidoctorExtensions"
    inputs.dir snippetsDir
    dependsOn test
}

// asciidoctor task 실행시 생성된 html 파일을 src/main/resources/static/docs 디렉토리에 카피
task copyDocument(type: Copy) {
    dependsOn asciidoctor
    from file("${asciidoctor.outputDir}")
    into file("src/main/resources/static/docs")
}

// 빌드되기전 copyDocument task 실행
build {
    dependsOn copyDocument
}

bootJar {
    // bootJar 실행되기 전 copyDocument task 실행
    dependsOn copyDocument
    // bootJar에 asciidoctor task에서 생성된 html 파일 추가
    from ("${asciidoctor.outputDir}") {
        // bootJar에 추가될 경로
        into 'static/docs'
    }
}